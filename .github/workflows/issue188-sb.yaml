###############################################################
#
## Copyright (Â©) 2024 David H Hoyt. All rights reserved.
##                 https://srd.cx
##
## Last Updated: 31-OCT-2025 at 1200Z by David Hoyt
#
#
#
## Intent: Issue188-sb
#
## TODO:  
#
#
###############################################################

name: "issue188-sb"

on:
  workflow_dispatch:

jobs:
  build-linux:
    name: Build and Test Linux with scan-build Issue 188
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    strategy:
      fail-fast: false

    steps:
      - name: Checkout master
        uses: actions/checkout@v4

      # Install dependencies
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake gcc g++ clang clang-tools libpng-dev libxml2 libxml2-dev libtiff-dev nlohmann-json3-dev libwxgtk3.2-dev wx-common python3 python3-pip curl git llvm
      # Ensure scan-build is in PATH
      - name: Ensure scan-build is installed and accessible
        run: |
          export PATH="/usr/lib/llvm-17/bin:$PATH"
          which scan-build || echo "? scan-build not found"
          scan-build --version || echo "? scan-build version check failed"
      # Configure the build with scan-build
      - name: Configure the build with scan-build
        run: |
          git clone https://github.com/ChrisCoxArt/iccDEV.git
          cd iccDEV
          git branch
          git status
          cd Build
          export CC=clang
          export CXX=clang++
          export PATH="/usr/lib/llvm-17/bin:$PATH"
          scan-build cmake -DCMAKE_INSTALL_PREFIX=$HOME/.local -DCMAKE_BUILD_TYPE=Release -DENABLE_TOOLS=ON -Wno-dev Cmake/
      # Run scan-build for static analysis
      - name: Run scan-build for static analysis
        run: |
          pwd
          cd iccDEV
          pwd
          ls
          cd Build
          pwd
          ls
          export PATH="/usr/lib/llvm-17/bin:$PATH"
          scan-build --status-bugs --keep-going -o scan-build-reports make -j$(nproc) || true
        continue-on-error: true 

      # Upload scan-build reports
      - name: Upload scan-build reports
        uses: actions/upload-artifact@v4
        with:
          name: scan-build-reports
          path: iccDEV/Build/scan-build-reports/

      # Upload built binaries as artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: master-build-linux
          path: iccDEV/Build/

      # Upload build logs
      - name: Upload build logs
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: iccDEV/Build/CMakeCache.txt
      - name: Summary Report
        if: always()
        run: |
          echo "### Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Build Directory: iccDEV/Build/" >> $GITHUB_STEP_SUMMARY
          echo "- Artifacts Uploaded: scan-build-reports, master-build-linux, build-logs" >> $GITHUB_STEP_SUMMARY
          echo "- Status: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
